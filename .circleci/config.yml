version: 2.1

workflows:
  version: 2
  pipeline:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - test:
          requires:
            - build
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main

jobs:
  build:
    working_directory: ~/ExampleApplication
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@8.1.4'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

  test:
    working_directory: ~/ExampleApplication
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Run application tests
          command: npm run test
      - run:
          name: Run Snyk security scan
          command: |
            npm install snyk --save-dev
            npx snyk test

  deploy:
    docker:
      - image: circleci/node:latest
    steps:
      - run:
          name: Deploy application
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; rm -rf ExampleApplication/; git clone https://github.com/visjaswal/ExampleApplication.git; source ExampleApplication/deploy.sh"
